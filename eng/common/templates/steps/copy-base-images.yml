parameters:
- name: acr
  type: object
  default:
    server: ""
    serviceConnection: ""
    subscription: ""
    resourceGroup: ""
- name: additionalOptions
  type: string
  default: ""
- name: repoPrefix
  type: string
  default: ""
- name: continueOnError
  type: string
  default: false

steps:
- template: /eng/common/templates/steps/run-imagebuilder.yml@self
  parameters:
    displayName: Copy Base Images
    serviceConnection: ${{ parameters.acr.serviceConnection }}
    continueOnError: ${{ parameters.continueOnError }}
    internalProjectName: internal
    # Use environment variable to reference $(dryRunArg). Since $(dryRunArg) might be undefined,
    # PowerShell will treat the Azure Pipelines variable macro syntax as a command and throw an
    # error
    args: >
      copyBaseImages
      '${{ parameters.acr.subscription }}'
      '${{ parameters.acr.resourceGroup }}'
      $(dockerHubRegistryCreds)
      $(customCopyBaseImagesArgs)
      --repo-prefix '${{ parameters.repoPrefix }}'
      --registry-override '${{ parameters.acr.server }}'
      --os-type 'linux'
      --architecture '*'
      $DRYRUNARG
      ${{ parameters.additionalOptions }}
